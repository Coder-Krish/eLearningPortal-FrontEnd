{"version":3,"sources":["zlib (ignored)","./src/app/register/register.component.ts","./src/app/register/register.component.html","fs (ignored)","http (ignored)","https (ignored)","./src/app/registered-users/registered-users.component.ts","./src/app/registered-users/registered-users.component.html","url (ignored)","./src/app/_services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/posts/posts.component.ts","./src/app/posts/posts.component.html","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/programs-and-subjects/programs-and-subjects.component.ts","./src/app/programs-and-subjects/programs-and-subjects.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notes/notes.component.ts","./src/app/notes/notes.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/discussions/discussions.component.ts","./src/app/discussions/discussions.component.html","./src/app/board-admin/board-admin.component.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n      <!-- <img\n        id=\"profile-img\"\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        class=\"profile-img-card\"\n      /> -->\n      <label><strong>Register Here</strong> </label>\n      <br>\n      <br>\n\n      <form\n        *ngIf=\"!isSuccessful\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\n        #f=\"ngForm\"\n        novalidate\n      >\n\n      <div class=\"form-group\">\n        <label for=\"fullname\">Fullname</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"fullname\"\n          [(ngModel)]=\"form.fullname\"\n          required\n          minlength=\"3\"\n          maxlength=\"50\"\n          #fullname=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && fullname.invalid\">\n          <div *ngIf=\"fullname.errors.required\">Fullname is required</div>\n          <div *ngIf=\"fullname.errors.minlength\">\n            Fullname must be at least 3 characters\n          </div>\n          <div *ngIf=\"fullname.errors.maxlength\">\n            Fullname must be at most 20 characters\n          </div>\n        </div>\n      </div>\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            [(ngModel)]=\"form.username\"\n            required\n            minlength=\"3\"\n            maxlength=\"20\"\n            #username=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n            <div *ngIf=\"username.errors.required\">Username is required</div>\n            <div *ngIf=\"username.errors.minlength\">\n              Username must be at least 3 characters\n            </div>\n            <div *ngIf=\"username.errors.maxlength\">\n              Username must be at most 20 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            name=\"email\"\n            [(ngModel)]=\"form.email\"\n            required\n            email\n            #email=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n            <div *ngIf=\"email.errors.required\">Email is required</div>\n            <div *ngIf=\"email.errors.email\">\n              Email must be a valid email address\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            required\n            minlength=\"6\"\n            #password=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n       \n        <div class=\"form-group\">\n          <label for=\"institution\">Institution</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"institution\"\n            [(ngModel)]=\"form.institution\"\n            required\n            minlength=\"3\"\n            maxlength=\"20\"\n            #institution=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && institution.invalid\">\n            <div *ngIf=\"institution.errors.required\">institution is required</div>\n            <div *ngIf=\"institution.errors.minlength\">\n              institution must be at least 3 characters\n            </div>\n            <div *ngIf=\"institution.errors.maxlength\">\n              institution must be at most 20 characters\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"course\">Program</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"course\"\n            [(ngModel)]=\"form.course\"\n            required\n            minlength=\"3\"\n            maxlength=\"20\"\n            #course=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && course.invalid\">\n            <div *ngIf=\"course.errors.required\">course is required</div>\n            <div *ngIf=\"course.errors.minlength\">\n              course must be at least 3 characters\n            </div>\n            <div *ngIf=\"course.errors.maxlength\">\n              course must be at most 20 characters\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"phone\">Phone</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"phone\"\n            [(ngModel)]=\"form.phone\"\n            required\n            minlength=\"10\"\n            \n            #phone=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && phone.invalid\">\n            <div *ngIf=\"phone.errors.required\">phone is required</div>\n            <div *ngIf=\"phone.errors.minlength\">\n              phone must be at least 10 characters\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"gender\">Gender</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"gender\"\n            [(ngModel)]=\"form.gender\"\n            required\n            #gender=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && gender.invalid\">\n            <div *ngIf=\"gender.errors.required\">gender is required</div> \n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address\">Address</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"address\"\n            [(ngModel)]=\"form.address\"\n            required\n            #address=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && address.invalid\">\n            <div *ngIf=\"address.errors.required\">address is required</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\">Sign Up</button>\n        </div>\n  \n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n          Signup failed!<br />{{ errorMessage }}\n        </div>\n      </form>\n  \n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n        Your registration is successful!\n      </div>\n    </div>\n  </div>\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { UserService } from '../_services/user.service';\nimport {ActivatedRoute} from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-registered-users',\n  templateUrl: './registered-users.component.html',\n  styleUrls: ['./registered-users.component.css']\n})\nexport class RegisteredUsersComponent implements OnInit {\n\n  content: any;\n  value:any;\n\n  isRegisteredUsers=false;\n  isActiveUsers=false;\n  isInActiveUsers=false;\n  public isDeleted=false;\n\n  searchResult:any;\n\n  totalRecords : number;\n  page: number = 1;\n\n  user:any;\n  profileDir:any;\n  retrievedProfileImage:any;\n  isretrievedProfileImage=false;\n\n  username:any;\n  fullname:any;\n  email:any;\n  active:any;\n  isEnabled:any;\n  gender:any;\n  address:any;\n  program:any;\n  institution:any;\n  phone:any;\n  userId:any;\n\n  popoverTitle:string=\"Are you sure you want to delete?\";\n  popoverMessage:string=\"You can not undo this operation after you confirm to delete.\";\n  cancelClicked=false;\n\n  constructor(private userService: UserService, private snackBar:MatSnackBar, private router:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.value=this.router.snapshot.params.id;\n    console.log(this.value);\n    if(this.value==\"registered-users\"){\n      this.userService.getAdminBoard().subscribe(\n      data => {\n        this.content = data;\n        this.isRegisteredUsers=true;\n        this.totalRecords=this.content.length;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n\n    }else if(this.value==\"active-users\"){\n      //document.writeln(\"This is where active users will be displayed\");\n\n      this.userService.getActiveUsers().subscribe(\n        data =>{\n          this.content=data;\n          this.isActiveUsers=true;\n          this.totalRecords=this.content.length;\n        },\n        err =>{\n          console.log(err);\n        }\n      );\n    }else if(this.value==\"inactive-users\"){\n      //document.writeln(\"This is where active users will be displayed\");\n\n      this.userService.getInActiveUsers().subscribe(\n        data =>{\n          this.content=data;\n          this.isInActiveUsers=true;\n          this.totalRecords=this.content.length;\n        },\n        err =>{\n          console.log(err);\n        }\n      );\n    }\n    else{\n      console.log(\"error occured\");\n    }\n  }\n\n\n  public deleteUser(id:Number){\n    let resp=this.userService.deleteUserbyId(id);\n    resp.subscribe(\n\n      data =>{\n        console.log(\"I am correct response\")\n     \n        this.isDeleted=true;\n        //alert(\"User deleted successfully\");\n       this.snackBar.open(data.message,'Dismiss',{\n         duration: 4000,\n         verticalPosition: 'bottom',\n         horizontalPosition: 'left',\n         panelClass:['red-snackBar'],\n\n       });\n     \n\n        this.userService.getAdminBoard().subscribe(\n          data =>{\n            this.content=data;\n          }\n        )\n      },\n      err =>{\n        \n        console.log(err);\n        \n      }\n    );\n    \n     \n  }\n\n  public deleteActiveUser(id:Number){\n    let resp=this.userService.deleteUserbyId(id);\n    resp.subscribe(\n\n      data =>{\n        console.log(\"I am correct response\")\n     \n        this.isDeleted=true;\n        //alert(\"User deleted successfully\");\n       this.snackBar.open(data.message,'Dismiss',{\n         duration: 4000,\n         verticalPosition: 'bottom',\n         horizontalPosition: 'left',\n         panelClass:['red-snackBar'],\n\n       });\n     \n\n        this.userService.getActiveUsers().subscribe(\n          data =>{\n            this.content=data;\n          }\n        )\n      },\n      err =>{\n        \n        console.log(err);\n        \n      }\n    );\n    \n     \n  }\n\n  key:string='id';\n  reverse:boolean=false;\n\n  sort(key){\n    this.key=this.key;\n    this.reverse=!this.reverse;\n  }\n\n  search(){\n    if(this.searchResult==\"\"){\n      this.ngOnInit();\n    }\n    else{\n      this.content=this.content.filter(res =>{\n     \n\n        if(res.username.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n        return res.username.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase());\n        }\n        if(res.fullname.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.fullname.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.email.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.email.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.course.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.course.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.gender.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.gender.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.address.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.address.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n      });\n    }\n  }\n\n  viewUser(id){\n\n    this.userService.getUserById(id).subscribe(\n      res =>{\n        console.log(res);\n          this.user=res;\n          this.active=res.active;\n          this.isEnabled=res.enabled;\n          this.program=res.course;\n          this.institution=res.institution;\n          this.phone=res.phone;\n          this.username=res.username;\n          this.userId=res.id;\n          this.email=res.email;\n          this.fullname=res.fullname;\n          this.address=res.address;\n          this.gender=res.gender;\n\n\n          this.userService.getProfilePictureDir(id).subscribe(\n            data =>{\n              if(data !=null){\n                this.isretrievedProfileImage=true;\n                this.profileDir=data.uploadDir;\n\n                this.userService.loadProfilePicture(this.profileDir).subscribe(\n                  result =>{\n                    this.createProfileImageFromBlob(result);\n                  }\n                );\n              }else{\n                this.isretrievedProfileImage=false;\n              }\n            }\n          );\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n  }\n\n  createProfileImageFromBlob(image: Blob){\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.retrievedProfileImage = reader.result;\n      \n    },false);\n    if(image){\n      reader.readAsDataURL(image);\n    }\n  }\n}\n","\n <div class=\"panel panel-default\" [hidden]=\"!isRegisteredUsers\">\n    <div class=\"panel-heading text-center\">\n        <h1>Registered users</h1>\n    </div>\n\n    <nav class=\"navbar\" style=\"float: right;\">\n        <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n       </nav>\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n        <table class=\"table table-bordered table-hover\">\n            <thead class=\"thead-light\" >\n                <tr >\n                    <th (click)=\"sort('id')\"># &nbsp;<i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('fullname')\">Fullname &nbsp;<i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('email')\">Email &nbsp;<i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('username')\">Username &nbsp;<i class=\"fa fa-sort\"></i></th>\n                   <th (click)=\"sort('program')\">Program &nbsp;<i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('gender')\">Gender &nbsp;<i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('address')\">Address &nbsp;<i class=\"fa fa-sort\"></i></th>\n                    <th style=\"white-space: nowrap;\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of content | orderBy: key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                    <td>{{user.id}}</td>\n                    <td>{{user.fullname}}</td>\n                    <td>{{user.email}}</td>\n                    <td>{{user.username}}</td>\n                    <td>{{user.course}}</td>\n                    <td>{{user.gender}}</td>\n                    <td>{{user.address}}</td>\n                    <td style=\"white-space: nowrap;\">\n                        <button (click)=\"updateUser(user.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                        <button (click)=\"viewUser(user.id)\" class=\"btn btn-success\" data-target=\"#userModal\" data-toggle=\"modal\"><i class=\"fa fa-eye\"></i></button>\n                    </td>\n                    \n                </tr>\n            </tbody>\n        </table> \n\n        <div>\n            <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n        </div>\n\n    </div> \n       \n    </div>\n</div>\n\n<!-- Active Users Panel -->\n\n<div class=\"panel panel-default\" [hidden]=\"!isActiveUsers\">\n    <div class=\"panel-heading text-center\">\n        <h1>Active Users</h1>\n    </div>\n\n    <nav class=\"navbar\" style=\"float: right;\">\n        <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n       </nav>\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered table-hover\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th (click)=\"sort('id')\"># &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('fullname')\">Fullname &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('email')\">Email &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('username')\">Username &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('program')\">Program &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('gender')\">Gender &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('address')\">Address &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th style=\"white-space: nowrap;\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of content | orderBy: key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                        <td>{{user.id}}</td>\n                        <td>{{user.fullname}}</td>\n                        <td>{{user.email}}</td>\n                        <td>{{user.username}}</td>\n                       <td>{{user.course}}</td>\n                        <td>{{user.gender}}</td>\n                        <td>{{user.address}}</td>\n                        <td style=\"white-space: nowrap;\">\n                            <button  class=\"btn btn-danger\"\n                            mwlConfirmationPopover\n                      [popoverTitle]=\"popoverTitle\"\n                      [popoverMessage]=\"popoverMessage\"\n                      placement=\"left\"\n                      (confirm)=\"deleteUser(user.id)\"\n                      (cancel)=\"cancelClicked = true\"\n                            ><i class=\"fa fa-trash\"></i></button> |\n                            <button (click)=\"updateUser(user.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                            <button (click)=\"viewUser(user.id)\" class=\"btn btn-success\" data-target=\"#userModal\" data-toggle=\"modal\"><i class=\"fa fa-eye\"></i></button>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table> \n\n            <div>\n                <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n            </div>\n\n    </div> \n       \n    </div>\n</div>\n\n<!-- InActive Users Panel -->\n\n<div class=\"panel panel-default\" [hidden]=\"!isInActiveUsers\">\n    <div class=\"panel-heading text-center\">\n        <h1>Deleted Or not activated users</h1>\n    </div>\n\n    <nav class=\"navbar\" style=\"float: right;\">\n        <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n       </nav>\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered table-hover\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th (click)=\"sort('id')\"># &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('fullname')\">Fullname &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('email')\">Email &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('username')\">Username &nbsp;<i class=\"fa fa-sort\"></i></th>\n                       <th (click)=\"sort('program')\">Program &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('gender')\">Gender &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('address')\">Address &nbsp;<i class=\"fa fa-sort\"></i></th>\n                        <th style=\"white-space: nowrap;\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of content | orderBy: key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                        <td>{{user.id}}</td>\n                        <td>{{user.fullname}}</td>\n                        <td>{{user.email}}</td>\n                        <td>{{user.username}}</td>\n                       <td>{{user.course}}</td>\n                        <td>{{user.gender}}</td>\n                        <td>{{user.address}}</td>\n                        <td style=\"white-space: nowrap;\">\n                            <button (click)=\"updateUser(user.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                            <button (click)=\"viewUser(user.id)\" class=\"btn btn-success\" data-target=\"#userModal\" data-toggle=\"modal\"><i class=\"fa fa-eye\"></i></button>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table> \n\n            <div>\n                <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n            </div>\n\n    </div> \n       \n    </div>\n</div>\n\n<!-- User Detail displaying Modal -->\n<div class=\"modal fade\" id=\"userModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"userModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\" style=\"background-color: #CCCCFF;\">\n        <div class=\"modal-header\" style=\"background-color: #CCCCFF;\">\n          <h5 class=\"modal-title\" id=\"userModalLongTitle\">User Detail</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <table class=\"table table-borderless\">\n            <tbody>\n              <tr>\n                <td colspan=\"2\" class=\"image-td\"><img *ngIf=\"isretrievedProfileImage\" class=\"profile-thumbnail\" [src]=\"retrievedProfileImage\" alt=\"logo\">\n                    <img  *ngIf=\"!isretrievedProfileImage\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\"> <br>\n                    <br>{{ username }} <br>\n                    {{ email }}\n                </td>\n              </tr>\n              <br>\n              <tr>\n                <td class=\"detail-td\">\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;User Id:&nbsp;&nbsp; {{ userId }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Full Name:&nbsp;&nbsp; {{ fullname }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone:&nbsp; &nbsp; {{ phone }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Program:&nbsp; &nbsp; {{ program }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Institution: &nbsp; &nbsp; {{ institution }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gender: &nbsp; &nbsp; {{ gender }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adress: &nbsp; &nbsp; {{ address }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Active Status: &nbsp; &nbsp; {{ active }} <br> <br>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email Verification Status: &nbsp; &nbsp; {{ isEnabled }} <br> <br>\n                </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n//const AUTH_API='http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(environment.apiUrls + 'auth/signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(environment.apiUrls + 'auth/signup', {\n      fullname:user.fullname,\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      institution:user.institution,\n      course:user.course,\n      phone:user.phone,\n      gender:user.gender,\n      address:user.address\n    }, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  content: string;\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getPublicContent().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  \n  }\n\n}\n","<div class=\"container\">\n    <header class=\"jumbotron\">\n      <p>{{ content }}</p>\n    </header>\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrls:\"http://localhost:8080/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n    \n   \n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  content:any;\n  value:any;\n\n  isAllPosts=false;\n  isActivePosts=false;\n  isInActivePosts=false;\n  isDeleted=false;\n  isretrievedProfileImage=false;\n\n\n  searchResult:any;\n\n  totalRecords : number;\n  page: number = 1;\n\n  thisIsAPost:any;\n  postedBy:any;\n  postedTime:any;\n  postedData:any;\n  user:any;\n\n  contentImage:any;\n  retrievedFile:any;\n  retrievedProfileImage:any;\n  profilePictureDir:any;\n\n  popoverTitle:string=\"Are you sure you want to delete?\";\n  popoverMessage:string=\"You can not undo this operation after you confirm to delete.\";\n  cancelClicked=false;\n\n  thisIsComment:any;\n  commentedBy:any;\n  commentedAt:any;\n  isCommentPresent=false;\n\n  commenterProfileImageDir:any;\n  commenterProfileImage:any;\n  isCommenterProfileImagePresent=false;\n\n\n  constructor(private userService:UserService,private snackBar:MatSnackBar,private router:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.value=this.router.snapshot.params.id;\n    //console.log(this.value);\n    if(this.value==\"all-posts\"){\n      this.userService.getAllPosts().subscribe(\n        data =>{\n          this.content=data;\n          this.isAllPosts=true;\n        },\n        err =>{\n          console.log(err.error.message);\n        }\n      );\n\n    }else if(this.value==\"active-posts\"){\n      this.userService.getAllActivePosts().subscribe(\n        data =>{\n          this.content=data;\n          this.isActivePosts=true;\n        },\n        err =>{\n          console.log(err.error.message);\n        }\n      );\n\n    }else if(this.value==\"inactive-posts\"){\n      this.userService.getAllInActivePosts().subscribe(\n        data =>{\n          this.content=data;\n          this.isInActivePosts=true;\n        },\n        err =>{\n          console.log(err.error.message);\n        }\n      );\n\n    }else{\n      console.log(\"error occurred\");\n    }\n\n  }\n\n  public deletePosts(id){\n\n    this.userService.deletePosts(id).subscribe(\n      \n      data =>{\n        this.isDeleted=true;\n\n        this.snackBar.open(data.message,'Dismiss',{\n          duration: 4000,\n          verticalPosition: 'bottom',\n          horizontalPosition: 'left',\n          panelClass:['red-snackBar'],\n \n        });\n\n        this.userService.getAllPosts().subscribe(\n          data =>{\n            this.content=data;\n\n          },\n          err =>{\n            console.log(err.error.message);\n          }\n        );\n\n      }\n\n    );\n\n  }\n\n  public deleteActivePosts(id){\n\n    this.userService.deletePosts(id).subscribe(\n      \n      data =>{\n        this.isDeleted=true;\n\n        this.snackBar.open(data.message,'Dismiss',{\n          duration: 4000,\n          verticalPosition: 'bottom',\n          horizontalPosition: 'left',\n          panelClass:['red-snackBar'],\n \n        });\n\n        this.userService.getAllActivePosts().subscribe(\n          data =>{\n            this.content=data;\n\n          },\n          err =>{\n            console.log(err.error.message);\n          }\n        );\n\n      }\n\n    );\n  }\n\n  key:string='id';\n  reverse:boolean=false;\n\n  sort(key){\n    this.key=this.key;\n    this.reverse=!this.reverse;\n  }\n\n  search(){\n    if(this.searchResult==\"\"){\n      this.ngOnInit();\n    }else{\n      this.content=this.content.filter(res =>{\n     \n\n        if(res.postedBy.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n        return res.postedBy.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase());\n        }\n        if(res.postedTime.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.postedTime.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        } \n      });\n    }\n  }\n\n  viewPosts(id){\n\n    this.userService.getPostById(id).subscribe(\n      res =>{\n        this.thisIsAPost=res;\n        this.postedBy=res.postedBy;\n        this.postedTime=res.postedTime;\n        this.postedData=res.content;\n        this.user=res.user;\n\n        this.profilePictureHandler(this.user.id);\n\n       \n        this.contentImage=res.uploadDir;\n\n\n        this.userService.getFile(this.contentImage).subscribe(\n          res =>{\n            this.createImageFromBlob(res);\n          },\n          err =>{\n            console.log(err);\n            \n          }\n    \n        );\n\n        this.userService.getCommentsByPostId(id).subscribe(\n          comments =>{\n\n            // console.log(comments);\n            if(comments.totalElements>0){\n\n              this.isCommentPresent=true;\n              console.log(comments);\n\n              this.thisIsComment= comments.content;\n             \n            for(let i=0; i< comments.content.length; i++){\n\n                this.userService.getUserById(comments.content[i].user_id).subscribe(\n                  user =>{\n                    this.thisIsComment[i].username=user.username;\n                  },\n                  err =>{\n                    console.log(err);\n                  }\n                  \n                );\n\n                this.userService.getProfilePictureDir(comments.content[i].user_id).subscribe(\n                  profileDir =>{\n                    this.commenterProfileImageDir=profileDir.uploadDir;\n                  \n                    //console.log(this.commenterProfileImageDir);\n\n\n                    this.userService.loadProfilePicture(this.commenterProfileImageDir).subscribe(\n                      (res:Blob) =>{\n    \n                        this.commenterProfileImageDir=null;\n                        let reader =new FileReader();\n                        reader.addEventListener(\"load\", ()=>{\n                        this.commenterProfileImage=reader.result;\n                        this.thisIsComment[i].commenterImage=this.commenterProfileImage;\n                        this.isCommenterProfileImagePresent=true;\n                        },false);\n    \n                        if(res){\n                         reader.readAsDataURL(res);\n                        }\n                      }\n                    );\n\n\n                  },\n                  err =>{\n                    console.log(err);\n                  }\n                );\n                console.log(\"i am here\");\n               \n\n            }\n            console.log(this.thisIsComment);\n\n\n            }else{\n              this.isCommentPresent=false;\n              \n            }\n          },\n          err =>{\n            console.log(err);\n          }\n          \n        );\n\n        \n\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n \n  }\n  createImageFromBlob(file: Blob){\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.retrievedFile = reader.result;\n    },false);\n    if(file){\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  createProfileImageFromBlob(image: Blob){\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.retrievedProfileImage = reader.result;\n      \n    },false);\n    if(image){\n      reader.readAsDataURL(image);\n    }\n  }\n\n\n\n\n  profilePictureHandler(id){\n    this.userService.getProfilePictureDir(id).subscribe(\n      res =>{\n        if(res !=null){\n        this.isretrievedProfileImage=true;\n        \n        this.profilePictureDir=res.uploadDir;\n        \n\n        this.userService.loadProfilePicture(this.profilePictureDir).subscribe(\n          data =>{\n            this.createProfileImageFromBlob(data);\n          }\n        );\n        }else{\n          this.isretrievedProfileImage=false;\n        }\n        \n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n  }\n\n}\n","\n<!-- All Posts Panel -->\n <div class=\"panel panel-default\" [hidden]=\"!isAllPosts\">\n    <div class=\"panel-heading text-center\">\n        <h1>All Posts</h1>\n    </div>\n\n\n    <nav class=\"navbar\" style=\"float: right;\">\n        <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n       </nav>\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered table-hover\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th (click)=\"sort('id')\"># &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('postedBy')\">Posted By &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('postedTime')\">Posted At &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('content')\">Content &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('fileType')\">File Type &nbsp; <i class=\"fa fa-sort\"></i></th>\n    \n                        <th style=\"white-space: nowrap;\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let posts of content | orderBy : key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                        <td>{{ posts.id }}</td>\n                        <td>{{ posts.postedBy }}</td>\n                        <td>{{ posts.postedTime }}</td>\n                        <td>{{ posts.content }}</td>                      \n                        <td>{{ posts.fileType }}</td>\n                        <td style=\"white-space: nowrap;\">\n                            <button (click)=\"updatePosts(posts.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                            <button (click)=\"viewPosts(posts.id)\" class=\"btn btn-success\" data-target=\"#postModal\" data-toggle=\"modal\"><i class=\"fa fa-eye\"></i></button>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table> \n            <div>\n                <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n            </div>\n    </div> \n       \n    </div>\n</div>\n\n<!-- Active Posts Panel -->\n\n<div class=\"panel panel-default\" [hidden]=\"!isActivePosts\">\n    <div class=\"panel-heading text-center\">\n        <h1>Active Posts</h1>\n    </div>\n\n\n    <nav class=\"navbar\" style=\"float: right;\">\n        <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n       </nav>\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered table-hover\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th (click)=\"sort('id')\"># &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('postedBy')\">Posted By &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('postedTime')\">Posted At &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('content')\">Content &nbsp; <i class=\"fa fa-sort\"></i></th>\n                        <th (click)=\"sort('fileType')\">File Type &nbsp; <i class=\"fa fa-sort\"></i></th>\n    \n                        <th style=\"white-space: nowrap;\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let posts of content | orderBy : key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                        <td>{{ posts.id }}</td>\n                        <td>{{ posts.postedBy }}</td>\n                        <td>{{ posts.postedTime }}</td>\n                        <td>{{ posts.content }}</td>\n                        \n                        <td>{{ posts.fileType }}</td>\n                        <td style=\"white-space: nowrap;\">\n                            <button class=\"btn btn-danger\"\n                            mwlConfirmationPopover\n                            [popoverTitle]=\"popoverTitle\"\n                            [popoverMessage]=\"popoverMessage\"\n                            placement=\"left\"\n                            (confirm)=\"deletePosts(posts.id)\"\n                            (cancel)=\"cancelClicked = true\"\n                            ><i class=\"fa fa-trash\"></i></button> |\n                            <button (click)=\"updatePosts(posts.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                            <button (click)=\"viewPosts(posts.id)\" class=\"btn btn-success\" data-target=\"#postModal\" data-toggle=\"modal\"><i class=\"fa fa-eye\"></i></button>\n                        </td>\n                        \n                    </tr>\n                </tbody>\n            </table> \n            <div>\n                <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n            </div>\n    </div> \n       \n    </div>\n</div>\n\n<!-- Deleted Posts Panel -->\n\n<div class=\"panel panel-default\" [hidden]=\"!isInActivePosts\">\n    <div class=\"panel-heading text-center\">\n        <h1>Deleted Posts</h1>\n    </div>\n\n    <nav class=\"navbar\" style=\"float: right;\">\n        <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n       </nav>\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n        <table class=\"table table-bordered table-hover\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th (click)=\"sort('id')\"># &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('postedBy')\">Posted By &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('postedTime')\">Posted At &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('content')\">Content &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('fileType')\">File Type &nbsp; <i class=\"fa fa-sort\"></i></th>\n\n                    <th style=\"white-space: nowrap;\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let posts of content | orderBy : key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                    <td>{{ posts.id }}</td>\n                    <td>{{ posts.postedBy }}</td>\n                    <td>{{ posts.postedTime }}</td>\n                    <td>{{ posts.content }}</td>\n                    \n                    <td>{{ posts.fileType }}</td>\n                    <td style=\"white-space: nowrap;\">\n                        <button (click)=\"updatePosts(posts.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                        <button (click)=\"viewPosts(posts.id)\" class=\"btn btn-success\" data-target=\"#postModal\" data-toggle=\"modal\"><i class=\"fa fa-eye\"></i></button>\n                    </td>\n                    \n                </tr>\n            </tbody>\n        </table> \n        <div>\n            <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n        </div>\n    </div> \n       \n    </div>\n</div>\n\n\n<!-- Post displaying Modal -->\n<div class=\"modal fade\" id=\"postModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"postModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"postModalLongTitle\">Post</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <table class=\"table table-borderless\">\n            <tbody>\n              <tr>\n                <td class=\"image-td\"><img *ngIf=\"isretrievedProfileImage\" class=\"profile-thumbnail\" [src]=\"retrievedProfileImage\" alt=\"logo\">\n                    <img *ngIf=\"!isretrievedProfileImage\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\">\n                </td>\n                <td class=\"intro-td\">{{ postedBy }}<br> {{ postedTime }}</td>\n                <td class=\"options-td\">\n                  <div class=\"dropdown-show\">\n                    <a  href=\"#\" role=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                      <i class=\"fas fa-ellipsis-h\"></i>\n                    </a>\n                    \n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                      <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                      <a class=\"dropdown-item\" href=\"#\">Delete</a>\n                      <a class=\"dropdown-item\" href=\"#\">Share</a>\n                    </div>\n                    </div>\n                  \n                 </td>\n              </tr>\n              <tr>\n                <td></td>\n                <td>{{ postedData }} <br><br>\n                   <img class=\"content-image\" [src]=\"retrievedFile\" alt=\"\">\n               </td>\n                <td></td>\n               </tr>\n            </tbody>\n          </table>\n          <hr>\n          <table class=\"table\">\n              <thead>Comments</thead>\n            \n                <tbody *ngIf=\"isCommentPresent\">\n                    <tr *ngFor= \"let comments of thisIsComment | paginate: { id: 'comments_pagination',itemsPerPage: 4,currentPage: page,totalItems: totalRecords }\">\n                      <td class=\"image-td\"><img *ngIf=\"isCommenterProfileImagePresent\" class=\"profile-thumbnail\" [src]=\"comments.commenterImage\" alt=\"profile Image\">\n                          <img *ngIf=\"!isCommenterProfileImagePresent\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\">\n                      </td>\n                      <td class=\"intro-td\">{{ comments.username }}<br> {{ comments.commentedAt }} <br> <br>\n                    {{ comments.comment }}</td>\n                      <td class=\"options-td\">\n                        <div class=\"dropdown-show\">\n                          <a  href=\"#\" role=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fas fa-ellipsis-h\"></i>\n                          </a>\n                          \n                          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                            <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                            <a class=\"dropdown-item\" href=\"#\">Delete</a>\n                            <a class=\"dropdown-item\" href=\"#\">Share</a>\n                          </div>\n                          </div>\n                        \n                       </td>\n                       \n                    </tr>\n                    \n                \n                  </tbody>\n                  <tbody *ngIf=\"!isCommentPresent\"><tr><td>No Comments</td></tr></tbody>\n\n          </table>\n\n          <div>\n            <pagination-controls  id=\"comments_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n        </div>\n\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n\n  content: any;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  \n    this.userService.getUserBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n    \n    \n  \n  }\n  \n\n}\n","<div class=\"container\">\n    <header class=\"jumbotron\">\n      <p>{{ content }}</p>\n    </header>\n  </div>\n\n\n\n  <!-- <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n        <h1>Registered users</h1>\n    </div>\n    <div class=\"panel-body\">\n        <table class=\"table table-striped table-bordered\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Fullname</th>\n                    <th>Email</th>\n                    <th>Username</th>\n                    <th>Phone</th>\n                    <th>Institution</th>\n                    <th>Program</th>\n                    <th>Gender</th>\n                    <th>Address</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of content\">\n                    <td>{{user.id}}</td>\n                    <td>{{user.fullname}}</td>\n                    <td>{{user.email}}</td>\n                    <td>{{user.username}}</td>\n                    <td>{{user.phone}}</td>\n                    <td>{{user.institution}}</td>\n                    <td>{{user.course}}</td>\n                    <td>{{user.gender}}</td>\n                    <td>{{user.address}}</td>\n                    <td><button >Delete</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-programs-and-subjects',\n  templateUrl: './programs-and-subjects.component.html',\n  styleUrls: ['./programs-and-subjects.component.css']\n})\nexport class ProgramsAndSubjectsComponent implements OnInit {\n\n\n  value:any;\n  isCourses=false;\n  programs:any;\n\n\n  selectedProgram:any;\n  selectedSemester:any;\n\n\n  isSubjectsGot=false;\n  isSelectedProgram=false;\n  isSelectedSemester=false;\n\n  constructor(private userService:UserService,private router:ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    this.value=this.router.snapshot.params.id;\n\n    if(this.value==\"programs\"){\n\n        this.isCourses=true;\n        this.userService.getAllPrograms().subscribe(\n          res =>{\n              this.programs=res;\n          },\n          err =>{\n            console.log(err);\n          }\n        );\n\n      \n\n    }\n    else if(this.value==\"subjects\"){\n      alert(\"Subjects\");\n    }\n  }\n  openAddProgramDialog(){\n\n  }\n  openAddSubjectDialog(){\n\n  }\n\n  openDialog(id:any){\n    console.log(id);\n  }\n  addProgram(){\n\n  }\n\n  addSubject(){\n    \n  }\n\n\n  selectChangeProgramHandler(event:any){\n\n    this.selectedProgram=event.target.value;\n    this.isSelectedProgram=true;\n  }\n\n  selectChangeSemesterHandler(event:any){\n\n    this.selectedSemester=event.target.value;\n    this.userService.getSubjectsAccordingly(this.selectedProgram,this.selectedSemester).subscribe(\n      sub =>{\n        this.isSubjectsGot=true;\n        this.isSelectedSemester=true;\n        \n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    );\n  }\n\n}\n","<!-- All Posts Panel -->\n<div class=\"panel panel-default\" [hidden]=\"!isCourses\">\n    <div class=\"panel-heading text-center\">\n        <h1>Courses We Provide</h1>\n    </div>\n\n    <!-- Button trigger add program modal  -->\n<button type=\"button\" (click)=\"openAddProgramDialog()\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addProgramModalCenter\" >\n    <i class=\"fa fa-plus\">&nbsp; Add New Program</i>\n  </button>\n\n      <!-- Button trigger add subject modal -->\n<button type=\"button\" (click)=\"openAddSubjectDialog()\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#addSubjectModalCenter\" style=\"margin-left: 10px;\" >\n    <i class=\"fa fa-plus\">&nbsp; Add New Subject</i>\n  </button>\n  <br><br>\n\n\n<!-- Modal to add program  -->\n<div class=\"modal fade\" id=\"addProgramModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addProgramModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addProgramModalLongTitle\"><strong>Add New Program</strong></h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n        \n          <form\n          name=\"form\"\n         \n          novalidate\n        >\n  \n        <div class=\"form-group\">\n          <label for=\"programs\">Write Program's Name</label>\n         <input type=\"text\" class=\"form-control\" name=\"program\" id=\"program\"  required/>\n        </div>\n  \n        \n      </form>\n  \n  \n  \n        </div>\n        <div class=\"modal-footer\">\n          \n          <button type=\"button\" class=\"btn btn-primary\"  (click)=\"addProgram()\"><i class=\"fa fa-plus\">&nbsp; &nbsp;Save</i></button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  <!-- End of Modal to add program -->\n\n  \n<!-- Modal to add subject  -->\n<div class=\"modal fade\" id=\"addSubjectModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addSubjectModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"addSubejctModalLongTitle\"><strong>Add New Subject</strong></h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n        \n          <form\n          name=\"form\"\n         \n          novalidate\n        >\n  \n        <div class=\"form-group\">\n            <label for=\"programs\">Program</label>\n            <select class=\"form-control\" (change)=\"selectChangeProgramHandler($event)\" required>\n                <option value=\"\">--Select Program--</option>\n                <option *ngFor=\"let program of programs\" value=\"{{program.id}}\">{{ program.programName }}</option>\n            </select>\n          </div>\n    \n          <div class=\"form-group\">\n            <label for=\"semesters\">Semester</label>\n            <select class=\"form-control\" (change)=\"selectChangeSemesterHandler($event)\" required>\n                <option value=\"\">--Select Semester--</option>\n                <option value=\"1\">First Semester</option>\n                <option value=\"2\">Second Semester</option>\n                <option value=\"3\">Third Semester</option>\n                <option value=\"4\">Fourth Semester</option>\n                <option value=\"5\">Fifth Semester</option>\n                <option value=\"6\">Sixth Semester</option>\n                <option value=\"7\">Seventh Semester</option>\n                <option value=\"8\">Eighth Semester</option>\n            </select>\n          </div>\n    \n    \n          <div class=\"form-group\">\n            <label for=\"subjects\">Subject Name</label>\n           <input type=\"text\" class=\"form-control\" name=\"subject\" id=\"subject\" required/>\n          </div>\n  \n        \n      </form>\n  \n  \n  \n        </div>\n        <div class=\"modal-footer\">\n          \n          <button type=\"button\" class=\"btn btn-success\"  (click)=\"addSubject()\"><i class=\"fa fa-plus\">&nbsp; &nbsp;Save</i></button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  <!-- End of Modal to add subject -->\n\n\n    <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-borderless table-hover table-light\">\n\n                <tbody >\n                    <tr *ngFor=\"let program of programs\">\n                        <td>></td>\n                        <a href=\"#\" (click)=\"openDialog(program.id)\" data-toggle=\"modal\" data-target=\"#viewSubjectModalCenter\" style=\"text-decoration: none; color: black;  \"> <td>   {{program.programName}}  </td></a>\n                        \n                    </tr>\n                    \n                </tbody>\n            </table> \n            \n    </div> \n       \n    </div>\n\n\n\n<!-- Modal to view subject by program wise  -->\n<div class=\"modal fade\" id=\"viewSubjectModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"viewSubjectModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"viewSubjectModalCenterLongTitle\"><strong>Subjects</strong></h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n        \n          <form\n          name=\"form\"\n         \n          novalidate\n        >\n          <div class=\"form-group\">\n            <label for=\"semesters\">Semester</label>\n            <select class=\"form-control\" (change)=\"selectChangeSemesterHandler($event)\" required>\n                <option value=\"\">--Select Semester--</option>\n                <option value=\"1\">First Semester</option>\n                <option value=\"2\">Second Semester</option>\n                <option value=\"3\">Third Semester</option>\n                <option value=\"4\">Fourth Semester</option>\n                <option value=\"5\">Fifth Semester</option>\n                <option value=\"6\">Sixth Semester</option>\n                <option value=\"7\">Seventh Semester</option>\n                <option value=\"8\">Eighth Semester</option>\n            </select>\n          </div>\n    \n    \n        \n  \n        \n      </form>\n  \n  \n  \n        </div>\n        \n      </div>\n    </div>\n  </div>\n  \n  \n  <!-- End of Modal to view subject by program wise -->\n\n\n</div>\n","import { Component,OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    \n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      \n      this.roles = user.roles;\n     \n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","\n\n<div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-dark bg-primary\">\n    <a href=\"#\" class=\"navbar-brand\">NightB4Exam</a>\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n        <a href=\"/notes\" class=\"nav-link\" routerLink=\"notes\">Notes</a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n <!-- Footer -->\n<footer class=\"page-footer font-small\">\n\n  <!-- Copyright -->\n  <div class=\"footer-copyright text-center py-3 bg-primary\">&copy; 2020\n    <a href=\"http://bogatikrishna.com.np\" style=\"color: aliceblue;\"> Krishna Bogati</a>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n</div>","import { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from '../_services/user.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Form } from '@angular/forms';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit{\n\n  constructor(private userService:UserService, private snackBar:MatSnackBar) { }\n\n  form:any={};\n  isOpenDialog=false;\n  isAllNotes=false;\n  isSubjectsGot=false;\n  uploadFileResult=false;\n\n  isSelectedProgram=false;\n  isSelectedSemester=false;\n  isSelectedSubject=false;\n  isSelectedFile=false;\n  successfulUpload=false;\n  noteView=false;\n  content:any;\n  registeredPrograms:any;\n  registeredSubjects:any;\n\n  selectedProgram:any;\n  selectedSemester:any;\n  selectedSubject:any;\n  selectedFile:any;\n  currentFile:File;\n\n  uploadSuccessfulMessage:any;\n\n  progress = 0;\n\n  noteUploadDir:any;\n\n  retrievedNote:any;\n\n  totalRecords : number;\n  page: number = 1;\n\n  searchResult:any;\n\n\n  popoverTitle:string=\"Are you sure you want to delete?\";\n  popoverMessage:string=\"You can not undo this operation after you confirm to delete.\";\n  cancelClicked=false;\n\n  ngOnInit(): void {\n\n\n\n    this.userService.getAllNotes().subscribe(\n      data =>{\n        this.isAllNotes=true;\n        this.content=data;\n        this.totalRecords=this.content.length;\n\n        \n       \n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    );\n  }\n\n//   ngAfterViewInit() {\n\n// //this.dtOptions.destroy;\n \n//   }\n\n  openDialog(){\n\n   // this.isOpenDialog=true;\n   // document.getElementById('add-new-note').style.display=\"block\";\n\n    this.userService.getAllPrograms().subscribe(\n      res =>{\n        this.registeredPrograms=res;\n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    );\n\n   \n  }\n\n  selectChangeProgramHandler(event:any){\n\n    this.selectedProgram=event.target.value;\n    this.isSelectedProgram=true;\n  }\n\n  selectChangeSemesterHandler(event:any){\n\n    this.selectedSemester=event.target.value;\n    this.userService.getSubjectsAccordingly(this.selectedProgram,this.selectedSemester).subscribe(\n      sub =>{\n        this.isSubjectsGot=true;\n        this.isSelectedSemester=true;\n        this.registeredSubjects=sub;\n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    );\n  }\n\n  selectChangeSubjectHandler(event:any){\n\n    this.selectedSubject=event.target.value;\n    this.isSelectedSubject=true;\n\n    console.log(this.selectedSubject);\n  }\n\n  selectFileHandler(event:any){\n    this.selectedFile=event.target.files[0];\n    this.isSelectedFile=true;\n    console.log(this.selectedFile);\n    \n\n  }\n\n  upload(){\n    console.log(\"i am upload method and i am getting selectedSubject as\"+ this.selectedSubject );\n\n    this.currentFile=this.selectedFile\n    //this.originalFile=this.selectedFile;\n    //FormData API provides methods and properties to allow us easily prepare form data to be sent with POST HTTP requests.\n    const uploadNoteFile:FormData = new FormData();\n    uploadNoteFile.append('file',this.selectedFile, this.selectedFile.name);\n\n    this.userService.addNotes(this.selectedSubject,uploadNoteFile).subscribe(\n      (res: HttpEvent<any>) =>{\n       // console.log(\"I am inside the caller method\");\n\n          switch(res.type){\n            case HttpEventType.Sent:\n              console.log('Request has been made!');\n              break;\n            case HttpEventType.ResponseHeader:\n              console.log('Response header has been received!');\n              break;\n            case HttpEventType.UploadProgress:\n              this.progress = Math.round(res.loaded / res.total * 100);\n              console.log(`Uploaded! ${this.progress}%`);\n              break;\n            case HttpEventType.Response:\n              console.log('Note Added Successfully!', res.body);\n              //this.uploadSuccessfulMessage=res.body;\n              if(this.progress ==100){\n              this.snackBar.open(res.body.message,'Dismiss',{\n                duration: 4000,\n                verticalPosition: 'bottom',\n                horizontalPosition: 'left',\n                panelClass:['success-snackBar'],\n       \n              });\n              //window.location.reload();\n              //document.getElementById('add-new-note').style.display=\"none\";\n              this.successfulUpload=true;\n            }\n             \n              default:\n              console.log(res.type);\n          }\n      },\n      err =>{\n        this.progress = 0;\n      this.uploadSuccessfulMessage = 'Could not upload the file!';\n      \n        console.log(err.error.message);\n      }\n    );\n   \n  \n  }\n\n\n  closeDialog(){\n    window.location.reload();\n  }\n\n  deleteNotes(id){\n    this.userService.deleteNote(id).subscribe(\n      res =>{\n        this.snackBar.open(res.message,'Dismiss',{\n       \n          duration: 4000,\n          verticalPosition: 'bottom',\n          horizontalPosition: 'left',\n          panelClass:['red-snackBar'],\n        });\n        this.userService.getAllNotes().subscribe(\n          res =>{\n            this.content=res;\n          },\n          err =>{\n            console.log(err.error.message);\n          }\n        )\n         \n        },\n        err =>{\n          console.log(err.error.message);\n        }\n      \n    );\n  }\n\n  viewNotes(id){\n    this.userService.getNoteById(id).subscribe(\n      res =>{\n\n        this.noteUploadDir=res.uploadDir;\n        //  console.log(this.noteUploadDir);\n\n        this.userService.getNoteFile(this.noteUploadDir).subscribe(\n          data =>{\n            this.createNoteFromBlob(data);\n            //console.log(data);\n          },\n          err =>{\n            console.log(err.error.message);\n          }\n        )\n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    );\n  }\n\n  createNoteFromBlob(file: Blob){\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.noteView=true;\n       this.retrievedNote = reader.result;\n      \n    },false);\n    if(file){\n      reader.readAsDataURL(file);\n    }\n  }\n  \n\n  search(){\n    if(this.searchResult == \"\"){\n      this.ngOnInit();\n    }else{\n      this.content=this.content.filter(res =>{\n        console.log(res);\n\n        if(res.semester.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n        return res.semester.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase());\n        }\n        if(res.program.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.program.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.addedBy.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.addedBy.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.fileType.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.fileType.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.addedTime.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.addedTime.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n        if(res.subject.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())){\n          return res.subject.toLocaleLowerCase().match(this.searchResult.toLocaleLowerCase())\n        }\n      });\n    }\n  }\n\n    key:string='id';\n    reverse:boolean=false;\n    sort(key){\n      this.key=key;\n      this.reverse= !this.reverse;\n\n\n    }\n\n}\n\n\n\n\n","<!-- All Posts Panel -->\n<div class=\"panel panel-default\" [hidden]=\"!isAllNotes\">\n    <div class=\"panel-heading text-center\">\n        <h1>All Notes</h1>\n    </div>\n    \n\n\n<!-- This is modal -->\n<!-- Button trigger modal -->\n<button type=\"button\" (click)=\"openDialog()\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addNoteModalCenter\" >\n  <i class=\"fa fa-plus\">&nbsp; Add New Notes</i>\n</button>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"addNoteModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addNoteModalCenterTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addNoteModalLongTitle\"><strong>Add New Note</strong></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n      \n        <form\n        name=\"form\"\n       \n        novalidate\n      >\n\n      <div class=\"form-group\">\n        <label for=\"programs\">Program</label>\n        <select class=\"form-control\" (change)=\"selectChangeProgramHandler($event)\" required>\n            <option value=\"\">--Select Program--</option>\n            <option *ngFor=\"let program of registeredPrograms\" value=\"{{program.id}}\">{{ program.programName }}</option>\n        </select>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"semesters\">Semester</label>\n        <select class=\"form-control\" (change)=\"selectChangeSemesterHandler($event)\" required>\n            <option value=\"\">--Select Semester--</option>\n            <option value=\"1\">First Semester</option>\n            <option value=\"2\">Second Semester</option>\n            <option value=\"3\">Third Semester</option>\n            <option value=\"4\">Fourth Semester</option>\n            <option value=\"5\">Fifth Semester</option>\n            <option value=\"6\">Sixth Semester</option>\n            <option value=\"7\">Seventh Semester</option>\n            <option value=\"8\">Eighth Semester</option>\n        </select>\n      </div>\n\n\n      <div class=\"form-group\">\n        <label for=\"subjects\">Subject</label>\n        <select class=\"form-control\" (change)=\"selectChangeSubjectHandler($event)\" required>\n            <option value=\"\">Select Subject</option>\n            <option *ngFor=\"let subject of registeredSubjects\" value=\"{{subject.id}}\">{{ subject.subjectsName }}</option>\n        </select>\n      </div>\n\n\n      <div class=\"form-group\">\n        <label for=\"file\">Choose a note file</label>\n       <input type=\"file\" class=\"form-control\" name=\"file\" id=\"subject\" (change)=\"selectFileHandler($event)\" required/>\n      </div>\n\n      <!-- progress bar start -->\n      <div [hidden]=\"!currentFile\" class=\"progress form-group\">\n        <div\n          class=\"progress-bar progress-bar-striped bg-success\"\n          role=\"progressbar\"\n          [style.width.%]=\"progress\"\n        >\n       \n        </div>\n      </div>\n      <!-- progress bar end -->\n    </form>\n\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" (click)=\"closeDialog()\" class=\"btn btn-danger\" data-dismiss=\"modal\"><i class=\"fa fa-close\"></i></button>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!(isSelectedFile && isSelectedProgram && isSelectedSemester && isSelectedSubject) || successfulUpload\" (click)=\"upload()\"><i class=\"fas fa-cloud-upload-alt\"></i></button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- End of modal -->\n\n     <nav class=\"navbar\" style=\"float: right;\">\n     <input type=\"text\" class=\"form-control\" name=\"searchResult\" [(ngModel)]=\"searchResult\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n    </nav>\n\n     <div class=\"panel-body\">\n        <div class=\"table-responsive\">\n        <table class=\"table table-bordered table-hover\" id=\"myTable\">\n            <thead class=\"thead-light\">\n                <tr>\n                    <th  (click)=\"sort('id')\"># &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('addedBy')\">Added By &nbsp; <i class=\"fa fa-sort\" ></i></th>\n                    <th (click)=\"sort('addedTime')\">Added At &nbsp; <i class=\"fa fa-sort\" ></i></th>\n                    <th (click)=\"sort('program')\">Program &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('semester')\" >Semester &nbsp; <i class=\"fa fa-sort\" ></i></th>\n                    <th (click)=\"sort('subject')\">Subject &nbsp; <i class=\"fa fa-sort\"></i></th>\n                    <th (click)=\"sort('fileType')\">File Type &nbsp; <i class=\"fa fa-sort\"></i></th>\n                   \n                    \n                    <th style=\"white-space: nowrap;\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let notes of content |orderBy : key : reverse | paginate: { id: 'listing_pagination',itemsPerPage: 8,currentPage: page,totalItems: totalRecords }\">\n                    <td>{{ notes.id }}</td>\n                    <td>{{ notes.addedBy }}</td>\n                    <td>{{ notes.addedTime }}</td>\n                    <td>{{ notes.program }}</td>\n                    <td>{{ notes.semester }}</td>\n                    <td>{{ notes.subject }}</td>\n                    <td>{{ notes.fileType }}</td>\n                   \n                    <td style=\"white-space: nowrap;\">\n                      <button  class=\"btn btn-danger\" \n                      mwlConfirmationPopover\n                      [popoverTitle]=\"popoverTitle\"\n                      [popoverMessage]=\"popoverMessage\"\n                      placement=\"left\"\n                      (confirm)=\"deleteNotes(notes.id)\"\n                      (cancel)=\"cancelClicked = true\"><i class=\"fa fa-trash\"></i></button> |\n                        <button (click)=\"updateNotes(notes.id)\" class=\"btn btn-primary\"><i class=\"fa fa-edit\"></i></button> |\n                        <button (click)=\"viewNotes(notes.id)\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModalLong\"><i class=\"fa fa-eye\"></i></button>\n                    </td>\n                    \n                </tr>\n            </tbody>\n        </table> \n        <div>\n            <pagination-controls  id=\"listing_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n        </div>\n    </div> \n       \n    </div>\n</div>\n\n\n\n  \n<!-- \n   <div id=\"noteViewPopup\" class=\"pdf-modal\" [hidden]=\"!noteView\">\n    <span class=\"close cursor\" (click)=\"closePdf()\">&times;</span>\n    <pdf-viewer [src]=\"retrievedNote\" [render-text]=\"true\" [show-all]=\"true\" style=\"display: block;\">\n\n    </pdf-viewer>\n    </div> -->\n\n\n    <!-- Pdf viewer modal -->\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModalLong\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog custom-modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Happy Reading</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        \n        <pdf-viewer [src]=\"retrievedNote\" [render-text]=\"true\" [show-all]=\"true\" style=\"display: block;\">\n\n        </pdf-viewer>\n\n\n      </div>\n    </div>\n  </div>\n</div>\n    <!-- End of Pdf Viewer modal -->\n\n\n\n","import { Injectable, OnInit} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { TokenStorageService } from './token-storage.service';\nimport { analyzeAndValidateNgModules, identifierModuleUrl } from '@angular/compiler';\nimport { env } from 'process';\n\n\n\n//const API_URL = 'http://localhost:8080/api/admin/';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({ 'Content-Type': 'multipart/form-data;boundary=\"file\"'})\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService implements OnInit {\n\n  currentUser:any;\n  msg:any;\n\n  constructor(private http:HttpClient,private token: TokenStorageService) { }\n\n  ngOnInit():void{\n    this.currentUser=this.token.getUser();\n  }\n\n\n\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(environment.apiUrls + 'test/all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(environment.apiUrls + 'test/admin', { responseType: 'text' });\n  }\n\n  getModeratorBoard(): Observable<any> {\n    return this.http.get(environment.apiUrls + 'test/mod', { responseType: 'text' });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(environment.apiUrls + 'test/list/users', { responseType: 'json' });\n  }\n\n  \n  getAllUsersCount(): Observable<any> {\n    return this.http.get(environment.apiUrls + 'admin/countAllTheUsers', { responseType: 'text' });\n  }\n\n  countAllTheActiveUsers():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllTheActiveUsers', {responseType: 'text'});\n  }\n\n  countAllTheInActiveUsers():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllTheInActiveUsers', {responseType: 'text'});\n  }\n\n  countAllThePosts():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllThePosts', {responseType: 'text'});\n  }\n\n  \n  countAllTheActivePosts():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllTheActivePosts', {responseType: 'text'});\n  }\n  \n  countAllTheInActivePosts():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllTheInActivePosts', {responseType: 'text'});\n  }\n\n  countAllTheDiscussion():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllTheDiscussion', {responseType: 'text'});\n  }\n\n  countAllTheActiveDiscussion():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/countAllTheActiveDiscussion', {responseType: 'text'});\n  }\n\n  countAllTheInActiveDiscussion():Observable<any>{\n\n    return this.http.get(environment.apiUrls + 'admin/countAllTheInActiveDiscussion', {responseType: 'text'});\n  }\n\n  // getProfilePicture():Observable<any>{\n  //   return this.http.get(environment.apiUrls + 'profilePicture/loadProfilePicture/', {responseType: 'text'});\n  // }\n\n  deleteUserbyId(id):Observable<any>{\n\n  return this.http.put(environment.apiUrls + 'admin/deleteUserbyId/' + id, {responseType: 'text'});\n}\n\n  getActiveUsers():Observable<any>{\n\n    return this.http.get(environment.apiUrls + 'admin/getOnlyActiveUsers', {responseType: 'json'});\n  }\n\n  getInActiveUsers():Observable<any>{\n\n    return this.http.get(environment.apiUrls + 'admin/getOnlyInActiveUsers', {responseType: 'json'});\n  }\n\n  getAllPosts():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/listAllThePosts', {responseType: 'json'});\n  }\n\n  getAllActivePosts():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/listAllTheActivePosts', {responseType: 'json'});\n  }\n  getAllInActivePosts():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/getTheDeletedPosts', {responseType: 'json'});\n  }\n\n  deletePosts(id):Observable<any>{\n    return this.http.put(environment.apiUrls + 'admin/deletePostById/' + id, {responseType: \"text\"});\n  }\n\n  getProfilePictureDir(id):Observable<any>{\n    \n    return this.http.get(environment.apiUrls + 'profilePicture/loadProfilePicture/' + id,{responseType: \"json\"});\n  }\n\n  loadProfilePicture(link):Observable<any>{\n    return this.http.get(link, {responseType: 'blob'});\n  }\n\n  getAllNotes():Observable<any>{\n    return this.http.get(environment.apiUrls + 'notes/listnotes', {responseType: 'json'});\n  }\n\n  getAllPrograms():Observable<any>{\n    return this.http.get(environment.apiUrls + 'programs/listprograms', {responseType: 'json'});\n  }\n\n  getAllSubjects():Observable<any>{\n    return this.http.get(environment.apiUrls + 'subjects/listsubjects', {responseType: 'json'});\n\n  }\n\n  getSubjectsAccordingly(program,semester):Observable<any>{\n\nreturn this.http.get(environment.apiUrls + 'subjects/listSubjectByProgramAndSemester/' + program + \"/\" + semester, {responseType: 'json'});\n\n}\n\n  addNotes(subjectId:Number,file:FormData){\n    \n    return this.http.post(environment.apiUrls + 'notes/addnotes/' + subjectId, file, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  deleteNote(id):Observable<any>{\n    return this.http.put(environment.apiUrls + 'notes/deletenotes/' + id, {responseType: 'json'});\n  }\n\n  getNoteById(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'notes/listnotesbyid/' + id, {responseType: 'json'});\n  }\n  getNoteFile(noteUploadDir):Observable<any>{\n    return this.http.get(noteUploadDir,{responseType: 'blob'} );\n  }\n\n  getAllDiscussions():Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/listAllTheForums', {responseType: 'json'});\n  }\n\n  getPostById(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'posts/listpostsbyid/' + id, {responseType: 'json'});\n  }\n\n  getFile(uploadDir):Observable<any>{\nreturn this.http.get(uploadDir, {responseType: 'blob'});\n  }\n\n  getUserById(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'admin/list/users/' + id, {responseType: 'json'});\n  }\n\n  getFollowerCount(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'follow/countfollower/' + id, {responseType:'json'});\n  }\n\n  getFollowingCount(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'follow/countfollowing/' + id, {responseType:'json'});\n  }\n\n  getPostsCount(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'posts/countposts/' + id, {responseType:'json'});\n  }\n  getDiscussionsCount(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'discussionforum/countDiscussion/' + id, {responseType:'json'});\n  }\n\n  getPostsByUserId(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'posts/listpostsbyuserid/' + id, {responseType: 'json'});\n  }\n\n  getdiscussionById(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'discussionforum/listdiscussionbyuserid/' + id, {responseType: 'json'});\n  }\n\n  getCommentsByPostId(id):Observable<any>{\n    return this.http.get(environment.apiUrls + 'comments/listcommentsbypostid/' + id, {responseType: 'json'});\n  }\n\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  \n  currentUser: any;\n  profilePicture:any;\n  currentUserId:any;\n  retrievedImage:any;\n  base64Data:any;\n  retirevedResponse:any;\n  popup=false;\n\n  followerCount:any;\n  followingCount:any;\n  postsCount:any;\n  discussionsCount:any;\n  myPosts=[];\n  myDiscussions:any;\n\n  isAboutClicked=false;\n  isPostsClicked=false;\n  isDiscussionsClicked=false;\n  isContentImageAvailable=false;\n  isDiscussionImageAvailable=false;\n\n  postedBy:any;\n  postedTime:any;\n  postedData:any;\n\n  contentImage:any;\n  retrievedFile:any;\n  retrievedUploadDir:[];\n  retrievedDiscussionUploadDir:[];\n\n  postInModal:any;\n  postedByInModal:any;\n  postedTimeInModal:any;\n  contentImageInModal:any;\n  user:any;\n\n  isretrievedProfileImage=false;\n  profilePictureDir:any;\n  retrievedProfileImage:any;\n  postedDataInModal:any;\n  isContentImagePresent=false;\n\n  thisIsComment:any;\n  commentedBy:any;\n  commentedAt:any;\n  isCommentPresent=false;\n\n  commenterProfileImageDir:any;\n  commenterProfileImage:any;\n  isCommenterProfileImagePresent=false;\n  \n  \n\n\n  \n\n  constructor(private token: TokenStorageService,private userService: UserService) { }\n\n  ngOnInit(): void {\n   \n   \n    this.currentUser = this.token.getUser();\n\n    this.currentUserId=this.currentUser.id;\n\n    this.postsClicked();\n    \n\n    this.userService.getFollowerCount(this.currentUserId).subscribe(\n      follower=>{\n        this.followerCount=follower.message;\n        //console.log(follower);\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n    this.userService.getFollowingCount(this.currentUserId).subscribe(\n      following =>{\n        this.followingCount=following.message;\n       // console.log(following);\n\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n    this.userService.getPostsCount(this.currentUserId).subscribe(\n      posts =>{\n        this.postsCount=posts.message;\n        //console.log(posts);\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n    this.userService.getDiscussionsCount(this.currentUserId).subscribe(\n      discussions =>{\n        this.discussionsCount=discussions.message;\n        //console.log(discussions);\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n    this.userService.getProfilePictureDir(this.currentUserId).subscribe(\n      data =>{\n        this.profilePicture=data.uploadDir;\n\n        this.userService.loadProfilePicture(this.profilePicture).subscribe(\n          res =>{\n             // this.retirevedResponse=res;\n              this.createImageFromBlob(res);\n       \n              //console.log(this.retirevedResponse);\n          }\n        )\n\n       // console.log(this.profilePicture);\n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    )\n\n   // this.userService.get\n\n    \n  }\n\n  createImageFromBlob(image: Blob){\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.retrievedImage = reader.result;\n    },false);\n    if(image){\n      reader.readAsDataURL(image);\n    }\n  }\n\n  letsPopup(){\n      this.popup=true;\n  }\n\n  popupImage(){\n    this.popup=true;\n    document.getElementById('imgModal').style.display = \"block\";\n  }\n\n  closeImage(){\n    document.getElementById('imgModal').style.display = \"none\";\n  }\n\n  aboutClicked(){\n    this.isAboutClicked=true;\n    this.isPostsClicked=false;\n    this.isDiscussionsClicked=false;\n  }\n\n  postsClicked(){\n    this.userService.getPostsByUserId(this.currentUserId).subscribe(\n      posts =>{\n        this.myPosts=posts;\n       \n\n        for(let i=0; i<this.myPosts.length;i++){\n\n          \n           if(posts[i].uploadDir!=null){\n           \n          this.retrievedUploadDir=posts[i].uploadDir;\n            \n          this.userService.getFile(this.retrievedUploadDir).subscribe(\n          (res:Blob) =>{\n            this.retrievedUploadDir=null;\n            let reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n              \n               this.retrievedFile= reader.result;\n               this.myPosts[i].contentImage=this.retrievedFile;\n               this.isContentImageAvailable=true;\n               //console.log(this.myPosts);\n               \n            },false);\n            if(res){\n              reader.readAsDataURL(res);\n            }\n          },\n          err =>{\n            console.log(err);\n            \n          }\n    \n        );\n        }else{\n          console.log(\"no content image\");\n          this.isContentImageAvailable=false;\n        }\n\n        }\n\n        this.isPostsClicked=true;\n        this.isDiscussionsClicked=false;\n        this.isAboutClicked=false;\n      \n    },\n      err =>{\n        console.log(err);\n      }\n    );\n\n  \n  }\n\n  discussionsClicked(){\n\n    this.userService.getdiscussionById(this.currentUserId).subscribe(\n      discussions =>{\n        this.myDiscussions=discussions;\n\n\n        for(let i=0; i<this.myDiscussions.length;i++){\n\n          \n          if(discussions[i].uploadDir!=null){\n          \n         this.retrievedDiscussionUploadDir=discussions[i].uploadDir;\n           \n         this.userService.getFile(this.retrievedDiscussionUploadDir).subscribe(\n         (res:Blob) =>{\n           this.retrievedDiscussionUploadDir=null;\n           let reader = new FileReader();\n           reader.addEventListener(\"load\", () => {\n             \n             // this.retrievedFile= reader.result;\n              this.myDiscussions[i].discussionImage=reader.result;\n              this.isDiscussionImageAvailable=true;\n              //console.log(this.myPosts);\n              \n           },false);\n           if(res){\n             reader.readAsDataURL(res);\n           }\n         },\n         err =>{\n           console.log(err);\n           \n         }\n   \n       );\n       }else{\n         console.log(\"no discussion image\");\n         this.isDiscussionImageAvailable=false;\n       }\n\n       }\n\n        //console.log(discussions);\n        this.isDiscussionsClicked=true;\n        this.isAboutClicked=false;\n        this.isPostsClicked=false;\n      },\n      err =>{\n        console.log(err);\n      }\n    );\n \n\n  }\n\n  viewPostInModal(id){\n    console.log(\"I am here with id= \"+id);\n    this.userService.getPostById(id).subscribe(\n\n      post =>{\n          this.postInModal=post;\n          this.postedByInModal=post.postedBy;\n          this.postedTimeInModal=post.postedTime;\n          this.postedDataInModal=post.content;\n          this.user=post.user;\n\n          this.profilePictureHandler(this.currentUserId);\n\n          this.contentImage=post.uploadDir;\n          if(this.contentImage!=null){\n          this.userService.getFile(this.contentImage).subscribe(\n            res =>{\n              \n              this.isContentImagePresent=true;\n              this.createContentImageFromBlob(res); \n            },\n            err =>{\n              console.log(err);\n              \n            }\n      \n          );\n          }else{\n            this.isContentImagePresent=false;\n          }\n\n        \n            //for comments\n\n            this.userService.getCommentsByPostId(id).subscribe(\n              comments =>{\n    \n                // console.log(comments);\n                if(comments.totalElements>0){\n    \n                  this.isCommentPresent=true;\n                  console.log(comments);\n    \n                  this.thisIsComment= comments.content;\n                 \n                for(let i=0; i< comments.content.length; i++){\n    \n                    this.userService.getUserById(comments.content[i].user_id).subscribe(\n                      user =>{\n                        this.thisIsComment[i].username=user.username;\n                      },\n                      err =>{\n                        console.log(err);\n                      }\n                      \n                    );\n    \n                    this.userService.getProfilePictureDir(comments.content[i].user_id).subscribe(\n                      profileDir =>{\n                        this.commenterProfileImageDir=profileDir.uploadDir;\n                      \n                        //console.log(this.commenterProfileImageDir);\n    \n    \n                        this.userService.loadProfilePicture(this.commenterProfileImageDir).subscribe(\n                          (res:Blob) =>{\n        \n                            this.commenterProfileImageDir=null;\n                            let reader =new FileReader();\n                            reader.addEventListener(\"load\", ()=>{\n                            this.commenterProfileImage=reader.result;\n                            this.thisIsComment[i].commenterImage=this.commenterProfileImage;\n                            this.isCommenterProfileImagePresent=true;\n                            },false);\n        \n                            if(res){\n                             reader.readAsDataURL(res);\n                            }\n                          }\n                        );\n    \n    \n                      },\n                      err =>{\n                        console.log(err);\n                      }\n                    );\n                    console.log(\"i am here\");\n                   \n    \n                }\n                console.log(this.thisIsComment);\n    \n    \n                }else{\n                  this.isCommentPresent=false;\n                  \n                }\n              },\n              err =>{\n                console.log(err);\n              }\n              \n            );\n    \n\n\n\n      }\n    );\n  }\n\n\n\n  createContentImageFromBlob(file: Blob){\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.retrievedFile = reader.result;\n       \n    },false);\n    if(file){\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n\n\n  profilePictureHandler(id){\n    this.userService.getProfilePictureDir(id).subscribe(\n      res =>{\n        if(res !=null){\n        this.isretrievedProfileImage=true;\n        \n        this.profilePictureDir=res.uploadDir;\n        \n\n        this.userService.loadProfilePicture(this.profilePictureDir).subscribe(\n          data =>{\n            this.createProfileImageFromBlob(data);\n          }\n        );\n        }else{\n          this.isretrievedProfileImage=false;\n        }\n        \n      },\n      err =>{\n        console.log(err);\n      }\n    );\n\n  }\n\n  createProfileImageFromBlob(image: Blob){\n\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n       this.retrievedProfileImage = reader.result;\n      \n    },false);\n    if(image){\n      reader.readAsDataURL(image);\n    }\n  }\n\n  newPostLoaded(event:any){\n\n    console.log(\"hello\");\n    console.log(event.data);\n  }\n\n}\n","<div class=\"container\" id=\"profile\" *ngIf=\"currentUser; else loggedOut\" >\n    <header class=\"jumbotron\" style=\"text-align: center;\">\n\n\n    \n      <img (click)=\"popupImage()\" *ngIf=\"retrievedImage\" class=\"images cursor\" [src]=\"retrievedImage\" alt=\"Avatar\" />\n  \n      \n      <div id=\"imgModal\" class=\"image-modal\" [hidden]=\"!popup\">\n        <span class=\"close cursor\" (click)=\"closeImage()\">&times;</span>\n        <img class=\"popped-image\" [src]=\"retrievedImage\" alt=\"Avatar\"/>\n        </div>\n  \n      <img  *ngIf=\"!retrievedImage\" class=\"images\" src=\"../assets/avatar.jpg\" alt=\"Avatar\" style=\"height: 60px; width: 60px; border-radius:50% ;\"/>\n      <h3>\n        <strong>{{ currentUser.fullname }}</strong> <br> @{{ currentUser.username }}\n      </h3>\n      <p>{{ followerCount }} &nbsp;&nbsp;&nbsp;&nbsp; {{ followingCount }}</p>\n   \n      <p>{{ postsCount }} &nbsp;&nbsp;&nbsp;&nbsp; {{ discussionsCount }}</p>\n     \n    </header>\n    <!-- Nav bar starts -->\n    \n      \n    \n     <nav class=\"navbar\">\n      <ul class=\"nav nav-pills\">\n       <li class=\"nav-item\" >\n        <a class=\"nav-link active\" data-toggle=\"pill\" (click)=\"postsClicked()\">{{ postsCount }}</a>\n      </li>\n       <li class=\"nav-item\">\n      <a class=\"nav-link\" data-toggle=\"pill\" (click)=\"discussionsClicked()\" >{{ discussionsCount }}</a>\n      </li>\n       <li class=\"nav-item\">\n      <a class=\"nav-link\" data-toggle=\"pill\"  (click)=\"aboutClicked()\">About</a>\n        </li>\n         </ul>\n      \n        </nav>\n\n  \n    <!-- navbar ends -->\n\n\n\n    <!-- Posts Section starts -->\n        <div *ngIf=\"isPostsClicked\" class=\"col-md-6 col-centered custom\">\n          \n\n          <table class=\"table\">\n            <tbody >\n              \n              \n              <tr *ngFor=\"let post of myPosts\">\n                <td class=\"image-td\"><img *ngIf=\"retrievedImage\" class=\"profile-thumbnail\" [src]=\"retrievedImage\" alt=\"logo\">\n                    <img *ngIf=\"!retrievedImage\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\">\n                </td><a href=\"#\" (click)=\"viewPostInModal(post.id)\" data-toggle=\"modal\" data-target=\"#postModal\" style=\"text-decoration: none; color: black; cursor: pointer;\">\n                <td class=\"intro-td\">{{ post.postedBy }}<br> {{ post.postedTime }} <br> <br>\n                  {{ post.content }} <br><br>\n    \n                   <img *ngIf=\"isContentImageAvailable\" class=\"content-image\" [src]=\"post.contentImage\" alt=\"{{ post.fileName }}\">\n                 <!-- </div>   -->\n                \n                </td>\n              </a>\n                <td class=\"options-td\">\n                  <div class=\"dropdown-show\">\n                    <a  href=\"#\" role=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                      <i class=\"fas fa-ellipsis-h\"></i>\n                    </a>\n                    \n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                      <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                      <a class=\"dropdown-item\" href=\"#\">Delete</a>\n                      <a class=\"dropdown-item\" href=\"#\">Share</a>\n                    </div>\n                    </div>\n                  \n                 </td>\n                \n              </tr>\n            \n             \n              \n            </tbody>\n          </table>\n\n\n        </div>\n\n    <!-- posts section ends -->\n\n        <!-- Discussions Section starts -->\n        <div *ngIf=\"isDiscussionsClicked\" class=\"col-md-6 col-centered custom\">\n          \n          <table class=\"table\">\n            <tbody >\n              \n              \n              <tr *ngFor=\"let discussion of myDiscussions\">\n                <td class=\"image-td\"><img *ngIf=\"retrievedImage\" class=\"profile-thumbnail\" [src]=\"retrievedImage\" alt=\"logo\">\n                    <img *ngIf=\"!retrievedImage\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\">\n                </td><a href=\"https://www.google.com\" style=\"text-decoration: none; color: black; cursor: pointer;\">\n                <td class=\"intro-td\">{{ discussion.postedBy }}<br> {{ discussion.postedAt }} <br> <br>\n                  {{ discussion.content }} <br><br>\n    \n                   <img *ngIf=\"isDiscussionImageAvailable\" class=\"content-image\" [src]=\"discussion.discussionImage\" alt=\"{{ discussion.fileName }}\">\n                 <!-- </div>   -->\n                \n                </td>\n              </a>\n                <td class=\"options-td\">\n                  <div class=\"dropdown-show\">\n                    <a  href=\"#\" role=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                      <i class=\"fas fa-ellipsis-h\"></i>\n                    </a>\n                    \n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                      <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                      <a class=\"dropdown-item\" href=\"#\">Delete</a>\n                      <a class=\"dropdown-item\" href=\"#\">Share</a>\n                    </div>\n                    </div>\n                  \n                 </td>\n              </tr>\n              \n            \n             \n              \n            </tbody>\n          </table>\n\n        </div>\n\n    <!-- Discussions section ends -->\n\n\n\n    <!-- Post displaying Modal -->\n<div class=\"modal fade\" id=\"postModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"postModalLongTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"postModalLongTitle\">Post</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-borderless\">\n          <tbody>\n            <tr>\n              <td class=\"image-td\"><img *ngIf=\"isretrievedProfileImage\" class=\"profile-thumbnail\" [src]=\"retrievedProfileImage\" alt=\"logo\">\n                  <img *ngIf=\"!isretrievedProfileImage\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\">\n              </td>\n              <td class=\"intro-td\">{{ postedByInModal }}<br> {{ postedTimeInModal }}</td>\n              <td class=\"options-td\">\n                <div class=\"dropdown-show\">\n                  <a  href=\"#\" role=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <i class=\"fas fa-ellipsis-h\"></i>\n                  </a>\n                  \n                  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                    <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                    <a class=\"dropdown-item\" href=\"#\">Delete</a>\n                    <a class=\"dropdown-item\" href=\"#\">Share</a>\n                  </div>\n                  </div>\n                \n               </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td>{{ postedDataInModal }} <br><br>\n                 <img *ngIf=\"isContentImagePresent\" class=\"content-image\" [src]=\"retrievedFile\" alt=\"\">\n             </td>\n              <td></td>\n             </tr>\n          </tbody>\n        </table>\n        <hr>\n        <table class=\"table\">\n            <thead>Comments</thead>\n          \n              <tbody *ngIf=\"isCommentPresent\">\n                  <tr *ngFor= \"let comments of thisIsComment | paginate: { id: 'comments_pagination',itemsPerPage: 4,currentPage: page,totalItems: totalRecords }\">\n                    <td class=\"image-td\"><img *ngIf=\"isCommenterProfileImagePresent\" class=\"profile-thumbnail\" [src]=\"comments.commenterImage\" alt=\"profile Image\">\n                        <img *ngIf=\"!isCommenterProfileImagePresent\" class=\"profile-thumbnail\" src=\"../assets/avatar.jpg\" alt=\"logo\">\n                    </td>\n                    <td class=\"intro-td\">{{ comments.username }}<br> {{ comments.commentedAt }} <br> <br>\n                  {{ comments.comment }}</td>\n                    <td class=\"options-td\">\n                      <div class=\"dropdown-show\">\n                        <a  href=\"#\" role=\"button\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                          <i class=\"fas fa-ellipsis-h\"></i>\n                        </a>\n                        \n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                          <a class=\"dropdown-item\" href=\"#\">Edit</a>\n                          <a class=\"dropdown-item\" href=\"#\">Delete</a>\n                          <a class=\"dropdown-item\" href=\"#\">Share</a>\n                        </div>\n                        </div>\n                      \n                     </td>\n                     \n                  </tr>\n                  \n              \n                </tbody>\n                <tbody *ngIf=\"!isCommentPresent\"><tr><td>No Comments</td></tr></tbody>\n\n        </table>\n\n        <div>\n          <pagination-controls  id=\"comments_pagination\" maxSize=\"5\" directionLinks=\"true\" (pageChange)=\"page = $event\" style=\"display: flex; float:right;\"></pagination-controls>\n      </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n<!--Modal section ends-->\n\n    \n    <!-- About section -->\n    <div class=\"about\" id=\"about-section\" *ngIf=\"isAboutClicked\">\n    <p>\n      <strong>Email:</strong>\n      {{ currentUser.email }}\n    </p>\n    <p>\n      <strong>Institution:</strong>\n      {{ currentUser.institution }}\n    </p>\n    <p>\n      <strong>Program:</strong>\n      {{ currentUser.course }}\n    </p>\n    <p>\n      <strong>Address:</strong>\n      {{ currentUser.address }}\n    </p>\n    <p>\n      <strong>Gender:</strong>\n      {{ currentUser.gender }}\n    </p>\n    <p>\n      <strong>Phone:</strong>\n      {{ currentUser.phone }}\n    </p>\n\n    <strong>Roles:</strong>\n    <ul>\n      <li *ngFor=\"let role of currentUser.roles\">\n        {{ role }}\n      </li>\n    </ul>\n  </div>\n  </div>\n  \n  <ng-template #loggedOut>\n    Please login.\n  </ng-template>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\n\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n\nimport { RegisteredUsersComponent } from './registered-users/registered-users.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { DiscussionsComponent } from './discussions/discussions.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport { ProgramsAndSubjectsComponent } from './programs-and-subjects/programs-and-subjects.component';\n\n  \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    BoardAdminComponent,\n    BoardModeratorComponent,\n    BoardUserComponent,\n    RegisteredUsersComponent,\n    PostsComponent,\n    DiscussionsComponent,\n    NotesComponent,\n    ProgramsAndSubjectsComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n\n    MatSliderModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    PdfViewerModule,\n    DataTablesModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    Ng2OrderModule,\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType: 'danger', // set defaults here\n    }),\n    \n \n    \n\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-discussions',\n  templateUrl: './discussions.component.html',\n  styleUrls: ['./discussions.component.css']\n})\nexport class DiscussionsComponent implements OnInit {\n\n\n  content:any;\n\n  constructor(private userService:UserService) { }\n\n  ngOnInit(): void {\n\n    this.userService.getAllDiscussions().subscribe(\n      data =>{\n\n        this.content=data;\n      },\n      err =>{\n        console.log(err.error.message);\n      }\n    )\n\n  }\n\n}\n","<p>discussions works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-board-admin',\n  templateUrl: './board-admin.component.html',\n  styleUrls: ['./board-admin.component.css']\n})\nexport class BoardAdminComponent implements OnInit {\n\n  //content: string;\n  countRegisteredUsers: any;\n  countActiveUsers: any;\n  countAllTheInActiveUsers: any;\n\n  countAllThePosts: any;\n  countAllTheActivePosts: any;\n  countAllTheInActivePosts: any;\n\n  countAllTheDiscussion: any;\n  countAllTheActiveDiscussion: any;\n  countAllTheInActiveDiscussion: any;\n\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n\n    // this.userService.getAdminBoard().subscribe(\n    //   data => {\n    //     this.content = data;\n    //   },\n    //   err => {\n    //     this.content = JSON.parse(err.error).message;\n    //   }\n    // );\n    this.userService.getAllUsersCount().subscribe(\n       registeredUsers => {\n        this.countRegisteredUsers = registeredUsers;\n      },\n      err => {\n        this.countRegisteredUsers = JSON.parse(err.error).message;\n      }\n    );\n\n    this.userService.countAllTheActiveUsers().subscribe(\n      activeUsers => {\n       this.countActiveUsers = activeUsers;\n     },\n     err => {\n       this.countActiveUsers = JSON.parse(err.error).message;\n     }\n   );\n\n   this.userService.countAllTheInActiveUsers().subscribe(\n    inActiveUsers => {\n     this.countAllTheInActiveUsers = inActiveUsers;\n   },\n   err => {\n     this.countAllTheInActiveUsers = JSON.parse(err.error).message;\n   }\n );\n\n this.userService.countAllThePosts().subscribe(\n  allPosts => {\n   this.countAllThePosts = allPosts;\n },\n err => {\n   this.countAllThePosts = JSON.parse(err.error).message;\n }\n );\n\n this.userService.countAllTheActivePosts().subscribe(\n  activePosts => {\n   this.countAllTheActivePosts = activePosts;\n },\n err => {\n   this.countAllTheActivePosts = JSON.parse(err.error).message;\n }\n);\n\nthis.userService.countAllTheInActivePosts().subscribe(\n  inActivePosts => {\n   this.countAllTheInActivePosts = inActivePosts;\n },\n err => {\n   this.countAllTheInActivePosts = JSON.parse(err.error).message;\n }\n);\n  \nthis.userService.countAllTheDiscussion().subscribe(\n  allDiscussion => {\n   this.countAllTheDiscussion = allDiscussion;\n },\n err => {\n   this.countAllTheDiscussion = JSON.parse(err.error).message;\n }\n);\n\nthis.userService.countAllTheActiveDiscussion().subscribe(\n  allActiveDiscussion => {\n   this.countAllTheActiveDiscussion = allActiveDiscussion;\n },\n err => {\n   this.countAllTheActiveDiscussion = JSON.parse(err.error).message;\n }\n);\n  \nthis.userService.countAllTheInActiveDiscussion().subscribe(\n  allInActiveDiscussion => {\n   this.countAllTheInActiveDiscussion = allInActiveDiscussion;\n },\n err => {\n   this.countAllTheInActiveDiscussion = JSON.parse(err.error).message;\n }\n);\n  \n  }\n\n}\n","<!-- <div class=\"container\">\n    <header class=\"jumbotron\">\n      <p>{{ content }}</p>\n    </header>\n  </div> -->\n  <div class=\"container-md\">\n  <table class=\"table table-borderless table-sm\">\n    <tbody>\n      <tr>\n        <th scope=\"row\"></th>\n        <td><a routerLink=\"/users/registered-users\" style=\"width: 100%; color: white; text-decoration: none;\"><button  class=\"btn btn-success w-100\">{{ countRegisteredUsers }}</button></a></td>\n        <td><a routerLink=\"/users/active-users\" style=\"width: 100%; color: white; text-decoration: none;\"><button  class=\"btn btn-warning w-100\">{{ countActiveUsers }}</button></a></td>\n        <td><a routerLink=\"/users/inactive-users\" style=\"width: 100%; color: white; text-decoration: none;\"><button  class=\"btn btn-danger w-100\">{{ countAllTheInActiveUsers }}</button></a></td>\n      </tr>\n\n      <tr>\n        <th scope=\"row\"></th>\n        <td><a routerLink=\"/posts/all-posts\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-success w-100\">{{ countAllThePosts }}</button></a></td>\n        <td><a routerLink=\"/posts/active-posts\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-warning w-100\">{{ countAllTheActivePosts }}</button></a></td>\n        <td><a routerLink=\"/posts/inactive-posts\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-danger w-100\">{{ countAllTheInActivePosts }}</button></a></td>\n      </tr>\n\n      <tr>\n        <th scope=\"row\"></th>\n        <td><a routerLink=\"/discussions/all-discussions\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-success w-100\">{{ countAllTheDiscussion }}</button></a></td>\n        <td><a routerLink=\"/discussions/active-discussions\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-warning w-100\">{{ countAllTheActiveDiscussion }}</button></a></td>\n        <td><a routerLink=\"/discussions/inactive-discussions\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-danger w-100\">{{ countAllTheInActiveDiscussion }}</button></a></td>\n      </tr>\n      <tr>\n        <th scope=\"row\"></th>\n        <td><a routerLink=\"/programs-and-subjects/programs\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-success w-100\">Programs</button></a></td>\n        <td><a routerLink=\"/programs-and-subjects/subjects\" style=\"color: white; text-decoration: none;\"><button  class=\"btn btn-warning w-100\">Subjects</button></a></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n  <div class=\"container\">\n    \n  </div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board-moderator',\n  templateUrl: './board-moderator.component.html',\n  styleUrls: ['./board-moderator.component.css']\n})\nexport class BoardModeratorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>board-moderator works!</p>\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { RegisteredUsersComponent } from './registered-users/registered-users.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { DiscussionsComponent } from './discussions/discussions.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { ProgramsAndSubjectsComponent } from './programs-and-subjects/programs-and-subjects.component';\n\nconst routes: Routes = [\n{ path: 'home', component: HomeComponent },\n{ path: 'login', component: LoginComponent },\n{ path: 'register', component: RegisterComponent },\n{ path: 'profile', component: ProfileComponent },\n{ path: 'user', component: BoardUserComponent },\n{ path: 'mod', component: BoardModeratorComponent },\n{ path: 'admin', component: BoardAdminComponent },\n{ path: 'users/:id', component: RegisteredUsersComponent },\n{ path: 'posts/:id', component: PostsComponent},\n{ path: 'discussions/:id', component:DiscussionsComponent},\n{ path: 'notes', component:NotesComponent},\n{ path: 'programs-and-subjects/:id', component:ProgramsAndSubjectsComponent},\n{ path: '', redirectTo: 'home', pathMatch: 'full' }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    this.authService.login(this.form).subscribe(\n      data => {\n        //console.log(data.accessToken);\n        this.tokenStorage.saveToken(data.token);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n      <!-- <img\n        id=\"profile-img\"\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        class=\"profile-img-card\"\n      /> -->\n      <label><strong>Login Here</strong> </label>\n      <br>\n      <br>\n      <form\n        *ngIf=\"!isLoggedIn\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\n        #f=\"ngForm\"\n        novalidate\n      >\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            [(ngModel)]=\"form.username\"\n            required\n            #username=\"ngModel\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && username.invalid\"\n          >\n            Username is required!\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            required\n            minlength=\"6\"\n            #password=\"ngModel\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && password.invalid\"\n          >\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-primary btn-block\">\n            Login\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && isLoginFailed\"\n          >\n            Login failed: {{ errorMessage }}\n          </div>\n        </div>\n      </form>\n  \n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div>\n    </div>\n  </div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}