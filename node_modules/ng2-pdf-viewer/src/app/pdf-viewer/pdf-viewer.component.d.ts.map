{"version":3,"file":"pdf-viewer.component.d.ts","sources":["pdf-viewer.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Created by vadimdez on 21/06/16.\n */\nimport { ElementRef, EventEmitter, OnChanges, SimpleChanges, OnInit, OnDestroy, AfterViewChecked } from '@angular/core';\nimport { PDFDocumentProxy, PDFSource, PDFProgressData } from 'pdfjs-dist';\nexport declare enum RenderTextMode {\n    DISABLED = 0,\n    ENABLED = 1,\n    ENHANCED = 2\n}\nexport declare class PdfViewerComponent implements OnChanges, OnInit, OnDestroy, AfterViewChecked {\n    private element;\n    pdfViewerContainer: any;\n    private isVisible;\n    static CSS_UNITS: number;\n    static BORDER_WIDTH: number;\n    private pdfMultiPageViewer;\n    private pdfMultiPageLinkService;\n    private pdfMultiPageFindController;\n    private pdfSinglePageViewer;\n    private pdfSinglePageLinkService;\n    private pdfSinglePageFindController;\n    private _cMapsUrl;\n    private _renderText;\n    private _renderTextMode;\n    private _stickToPage;\n    private _originalSize;\n    private _pdf;\n    private _page;\n    private _zoom;\n    private _zoomScale;\n    private _rotation;\n    private _showAll;\n    private _canAutoResize;\n    private _fitToPage;\n    private _externalLinkTarget;\n    private _showBorders;\n    private lastLoaded;\n    private _latestScrolledPage;\n    private resizeTimeout;\n    private pageScrollTimeout;\n    private isInitialized;\n    private loadingTask;\n    afterLoadComplete: EventEmitter<PDFDocumentProxy>;\n    pageRendered: EventEmitter<CustomEvent<any>>;\n    textLayerRendered: EventEmitter<CustomEvent<any>>;\n    onError: EventEmitter<any>;\n    onProgress: EventEmitter<PDFProgressData>;\n    pageChange: EventEmitter<number>;\n    src: string | Uint8Array | PDFSource;\n    cMapsUrl: string;\n    page: any;\n    renderText: boolean;\n    renderTextMode: RenderTextMode;\n    originalSize: boolean;\n    showAll: boolean;\n    stickToPage: boolean;\n    zoom: number;\n    zoomScale: 'page-height' | 'page-fit' | 'page-width';\n    rotation: number;\n    externalLinkTarget: string;\n    autoresize: boolean;\n    fitToPage: boolean;\n    showBorders: boolean;\n    static getLinkTarget(type: string): any;\n    static setExternalLinkTarget(type: string): void;\n    constructor(element: ElementRef);\n    ngAfterViewChecked(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onPageResize(): void;\n    readonly pdfLinkService: any;\n    readonly pdfViewer: any;\n    readonly pdfFindController: any;\n    ngOnChanges(changes: SimpleChanges): void;\n    updateSize(): void;\n    clear(): void;\n    private setupMultiPageViewer;\n    private setupSinglePageViewer;\n    private getValidPageNumber;\n    private getDocumentParams;\n    private loadPDF;\n    private update;\n    private render;\n    private getScale;\n    private getCurrentViewer;\n    private resetPdfDocument;\n}\n"]}